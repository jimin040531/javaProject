/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package deu.hms.roomManagement;

import deu.hms.login.MainScreenManager;
import deu.hms.login.UserAuthentication;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jimin
 */
public class RoomManagementFrame extends javax.swing.JFrame {
    private final RoomService roomService;
    private final RoomRepository roomRepository;
    
    public RoomManagementFrame(RoomService roomService) {
        roomRepository = new RoomRepository();
        this.roomService = roomService;
        initComponents();
        setLocationRelativeTo(null);
        roomService.getRoomRepository().loadRoomDataToTable(roomTable);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        roomManagement = new javax.swing.JLabel();
        roomManagementTable = new javax.swing.JScrollPane();
        roomTable = new javax.swing.JTable();
        saveButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        roomManagement.setFont(new java.awt.Font("맑은 고딕", 1, 24)); // NOI18N
        roomManagement.setText("객실 관리");

        roomTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "층", "호수", "가격", "등급", "인원"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        roomTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                roomTableMouseClicked(evt);
            }
        });
        roomManagementTable.setViewportView(roomTable);
        if (roomTable.getColumnModel().getColumnCount() > 0) {
            roomTable.getColumnModel().getColumn(0).setPreferredWidth(50);
            roomTable.getColumnModel().getColumn(3).setPreferredWidth(100);
        }

        saveButton.setText("저장");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("삭제");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        addButton.setText("등록");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        backButton.setText("<");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(backButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addComponent(roomManagement))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(addButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(deleteButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(saveButton))
                        .addComponent(roomManagementTable, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(backButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(28, Short.MAX_VALUE)
                .addComponent(roomManagement)
                .addGap(18, 18, 18)
                .addComponent(roomManagementTable, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton)
                    .addComponent(deleteButton)
                    .addComponent(addButton))
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void roomTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roomTableMouseClicked

    }//GEN-LAST:event_roomTableMouseClicked

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        saveTableData();
    }//GEN-LAST:event_saveButtonActionPerformed
    private void saveTableData() {
        DefaultTableModel model = (DefaultTableModel) roomTable.getModel();
        roomRepository.saveTableDataToFile(model); // 테이블 데이터를 파일에 저장합니다.
        JOptionPane.showMessageDialog(this, "데이터가 성공적으로 저장되었습니다.", "저장 성공!", JOptionPane.INFORMATION_MESSAGE);
    }
    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
     int selectedRow = roomTable.getSelectedRow(); // 테이블에서 선택된 행을 가져옴
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "삭제할 객실을 선택해 주세요.", "삭제 오류", JOptionPane.WARNING_MESSAGE);
            return;
        }

        DefaultTableModel model = (DefaultTableModel) roomTable.getModel();
        int floor = Integer.parseInt(model.getValueAt(selectedRow, 0).toString());
        int roomNumber = Integer.parseInt(model.getValueAt(selectedRow, 1).toString());

        try {
            roomService.deleteRoom(floor, roomNumber);
            JOptionPane.showMessageDialog(this, "객실이 성공적으로 삭제되었습니다.", "삭제 성공!", JOptionPane.INFORMATION_MESSAGE);
            roomService.getRoomRepository().loadRoomDataToTable(roomTable);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "객실 삭제 중 오류 발생: " + e.getMessage(), "삭제 오류", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        try {
            int floor = Integer.parseInt(JOptionPane.showInputDialog(this, "등록할 객실의 층 번호를 입력하세요:"));
            int roomNumber = Integer.parseInt(JOptionPane.showInputDialog(this, "등록할 객실의 방 번호를 입력하세요:"));
            int price = Integer.parseInt(JOptionPane.showInputDialog(this, "객실의 가격을 입력하세요:"));
            String grade = JOptionPane.showInputDialog(this, "객실의 등급을 입력하세요 (Standard, Deluxe, Suite):");
            int capacity = Integer.parseInt(JOptionPane.showInputDialog(this, "객실의 수용 인원을 입력하세요:"));

            roomService.addRoom(new Room(floor, roomNumber, price, grade, capacity));
            JOptionPane.showMessageDialog(this, "객실이 성공적으로 등록되었습니다.", "등록 성공!", JOptionPane.INFORMATION_MESSAGE);
            roomService.getRoomRepository().loadRoomDataToTable(roomTable);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "객실 추가 중 오류 발생: " + e.getMessage(), "등록 오류", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_addButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // 현재 창을 닫고 MainScreenManager로 이동
        this.dispose();  // userManagementFrame 닫기

        // 객체 생성 
        UserAuthentication userAuth = new UserAuthentication();

        // MainScreenManager로 이동, UserAuthentication 객체 전달
        MainScreenManager mainScreenManager = new MainScreenManager(userAuth);
        mainScreenManager.setLocationRelativeTo(null);
        mainScreenManager.setVisible(true);  // MainScreenManager 창 표시
    }//GEN-LAST:event_backButtonActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton backButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel roomManagement;
    private javax.swing.JScrollPane roomManagementTable;
    private javax.swing.JTable roomTable;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables
}
